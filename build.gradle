/**
 * This section is for all of the plugins we need to make this work. 
 * Kotlin, the fat jar builder, and flag it 
 * as an application so `./gradlew run` will work
 */
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

apply plugin: 'application'

//def credits = [
//    "Erik Lindbom erik@baens.net": "https://blog.baens.net/posts/step-by-step-kotlin-jaxrs-hello-world/"
//]
//project.getLogger().lifecycle("credits: ", credits)

/**
 * Standard dependency section for gradle. 
 * Define the kotlin standard library for
 * Java 8.
 */
repositories {
    mavenCentral()
}

def kotlinVersion = "1.9.20"
def jerseyVersion = "3.1.1"
def graphqlVersion = "21.0"
def freemarkerVersion = "2.3.32"

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    // Jersey
    implementation "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVersion"
    implementation "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion"

    // GraphQL
    implementation "com.graphql-java:graphql-java:$graphqlVersion"
    implementation "com.graphql-java:graphql-java-extended-scalars:$graphqlVersion"
    implementation "com.graphql-java:graphql-java-tools:$graphqlVersion"
    implementation "com.graphql-java-kickstart:graphql-java-tools:12.0.0"
    implementation "com.graphql-java-kickstart:graphiql-spring-boot-starter:11.1.0"

    // State Management
    implementation "io.github.microutils:kotlin-logging:3.0.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"

    // Templating
    implementation "org.freemarker:freemarker:$freemarkerVersion"
    implementation "com.github.spullara.mustache.java:compiler:0.9.10"

    // Testing
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
    testImplementation "org.junit.jupiter:junit-jupiter:5.9.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.9.2"
}

/**
 * Personal preference. I hate having src/main/kotlin
 * be the root, so I change it that 'src'
 * as the root of my source directory.
 */
sourceSets {
    main {
        java {
            srcDirs += "src/main/java"
        }
        kotlin {
            srcDirs += 'src/main/kotlin'
        }
    }
    test {
        java {
            srcDirs += "src/test/java"
        }
        kotlin {
            srcDirs += 'src/test/kotlin'
        }
    }
}

test {
    useJUnitPlatform()
}

// Define the main startup class and jar name
application {
    mainClass = 'main.kotlin.ServerKt'
}

shadowJar {
    archiveBaseName.set('wave-reader-backend')
    archiveClassifier.set('')
    archiveVersion.set('')
}

// Properties for `./gradlew run`
run {
    standardInput = System.in
    environment = ["SHUTDOWN_TYPE": "INPUT"]
}
